#!/usr/local/bin/lua

local arguments = {
  install = true,
  sync = true,
  update = true,
  clean = true,
  doctor = true,
  debug = true,
  help = true,
}

local argument

if #arg == 0 then
  argument = arguments[1]
else
  if #arg > 1 and arg[1] ~= 'debug' then
    error('you passed multiple arguments.')
  end

  if not arguments[arg[1]] then
    error('unknow argument ' .. arg[1])
  end
  argument = arg[1]

  if arg[1] == 'debug' then
    local tmp_tbl = {table.unpack(arg,2,#arg)}
    for i, k in pairs(tmp_tbl) do
      tmp_tbl[i] = 'modules/'..k ..'/plugins'
    end
    local vim_var = 'let g:disable_modules="' .. table.concat(tmp_tbl,',') .. '"'
    os.execute([[nvim --headless -c ']] .. vim_var ..[[ | lua=require"core.pack".Packer:cli_compile()']])
    os.execute('nvim')
    return
  end
end

if argument == 'help' then
  local usage = {
    'Neovim bot usage:',
    '  install      install all',
    '  update       update all plugins',
    '  sync         Sync configuration and compile',
    '  clean        clean the direcotries',
    '  doctor       check the plugins info',
    '  debug        dynamic disable modules for debug',
    '  help         show the usage of bot',
  }
  for _, msg in pairs(usage) do
    print(msg)
  end
  os.exit()
end

local handle
handle = io.popen([[nvim --clean --headless --cmd 'echo $VIMRUNTIME|q' 2>&1]], 'r')
local rtp = handle:read('*a')
handle:close()

handle = io.popen([[nvim --clean --headless --cmd 'echo stdpath("config")|q' 2>&1]], 'r')
local config_path = handle:read('*a')
handle:close()

-- set the poackage path
package.path = package.path .. ';' .. rtp .. '/lua/vim/?.lua;' .. config_path .. '/lua/?.lua'

local cli = require('core.cli')
local helper = require('core.helper')

if argument ~= 'doctor' and argument ~= 'clean' then
  helper.test_internet()
end

cli.config_path = config_path
cli.rtp = rtp
-- env init
cli:env_init()

helper.peach('ðŸ¤– Glepnir Neovim Config Bot Running...')

cli:meta(argument)()

